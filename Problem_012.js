/*

The sequence of triangle numbers is generated by adding the natural numbers. 
	So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

*/

let result = -1;
const limit = 500;

function triangNum(limit) {
	let temp = 0;
	for (let i = 1; i <= limit; i++) {
		temp += i;
	}
	return temp;
}

function numOfDivisors(num) {
	let temp = 2;
	let target = num;
	let returnValue = 1;

	while(temp <= target) {
		let count = 0;
		while(target % temp === 0) {
			count++
			if(target === temp) break;
			(function (newTarget) {
				target = newTarget;
			}(target / temp))
		}
		returnValue *= (count+1);
		temp++;
	}
	return returnValue;
}

let count = 1;

while (true) {
	if (numOfDivisors(triangNum(count)) > 500) break;
	count++;
}

result = triangNum(count);

console.log("Project Euler \nProblem 012 \nResult: " + result);